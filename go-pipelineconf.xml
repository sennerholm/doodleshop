<?xml version="1.0" encoding="utf-8"?>
<cruise xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="cruise-config.xsd" schemaVersion="87">
  <server artifactsdir="artifacts" agentAutoRegisterKey="123456789abcdef" commandRepositoryLocation="default" serverId="dc1ecac1-47e7-433b-8061-5d9deb788e14" />
  <pipelines group="Doodleshop">
    <pipeline name="DoodleshopBAT" labeltemplate="1.0.${COUNT}" isLocked="false">
      <params>
        <param name="SOURCE_DIR" />
      </params>
      <trackingtool link="https://github.com/dmarell/doodleshop/issues/${ID}" regex="##(\d+)" />
      <environmentvariables>
        <variable name="DOCKER_USER">
          <value>cagkurs</value>
        </variable>
        <variable name="DOCKER_PASSWORD">
          <value>KursPassword</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="https://github.com/sennerholm/doodleshop" materialName="src" />
      </materials>
      <stage name="Build">
        <jobs>
          <job name="Build2DockerImage">
            <tasks>
              <exec command="bash">
                <arg>scripts/build.sh</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>docker</resource>
            </resources>
            <artifacts>
              <artifact src="artifacts" dest="downstream" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="AutoSmallDeployAndTest" fetchMaterials="false" cleanWorkingDir="true">
        <environmentvariables>
          <variable name="DOODLE_ENV">
            <value>autosmall</value>
          </variable>
        </environmentvariables>
        <jobs>
          <job name="DeployAndTests">
            <tasks>
              <fetchartifact pipeline="DoodleshopBAT" stage="Build" job="Build2DockerImage" srcdir="downstream/artifacts">
                <runif status="passed" />
              </fetchartifact>
              <exec command="bash" workingdir="artifacts/scripts">
                <arg>deployandsmoke.sh</arg>
                <arg>2</arg>
                <runif status="passed" />
              </exec>
              <exec command="bash" workingdir="artifacts/scripts">
                <arg>runtest.sh</arg>
                <arg>2</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>docker</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="Doodleshop-AutoLarge" labeltemplate="${DoodleshopBAT}-al${COUNT}" isLocked="false">
      <environmentvariables>
        <variable name="RANCHER_URL">
          <value>http://54.229.16.8:8080/</value>
        </variable>
        <variable name="RANCHER_ACCESS_KEY">
          <value>A1E2C6E9FC637154D6B3</value>
        </variable>
        <variable name="RANCHER_SECRET_KEY">
          <value>LxEnc8ctqtzPFyCJvbG8s1Zi6wkjcMMs9CtN84nX</value>
        </variable>
      </environmentvariables>
      <materials>
        <pipeline pipelineName="DoodleshopBAT" stageName="AutoSmallDeployAndTest" />
        <pipeline pipelineName="tools" stageName="Build" materialName="tools" />
      </materials>
      <stage name="AutoLargeDeployAndTest" fetchMaterials="false" cleanWorkingDir="true">
        <environmentvariables>
          <variable name="DOODLE_ENV">
            <value>autolarge</value>
          </variable>
        </environmentvariables>
        <jobs>
          <job name="DeployAndTests">
            <tasks>
              <fetchartifact pipeline="DoodleshopBAT" stage="Build" job="Build2DockerImage" srcdir="downstream/artifacts">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="tools" stage="Build" job="tools" srcfile="downstream/artifacts/rancher">
                <runif status="passed" />
              </fetchartifact>
              <exec command="bash">
                <arg>-x</arg>
                <arg>artifacts/scripts/rancher-deploy.sh</arg>
                <arg>test</arg>
                <arg>artifacts/rancher/doodleshop-autolarge</arg>
                <runif status="passed" />
              </exec>
              <exec command="bash" workingdir="artifacts/scripts">
                <arg>runtest.sh</arg>
                <arg>3</arg>
                <runif status="passed" />
              </exec>
              <exec command="find">
                <arg>.</arg>
                <runif status="failed" />
              </exec>
            </tasks>
            <resources>
              <resource>test</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="Doodleshop-UAT" labeltemplate="${DoodleshopBAT}-uat${COUNT}" isLocked="false">
      <environmentvariables>
        <variable name="RANCHER_URL">
          <value>http://54.229.16.8:8080/</value>
        </variable>
        <variable name="RANCHER_ACCESS_KEY">
          <value>A1E2C6E9FC637154D6B3</value>
        </variable>
        <variable name="RANCHER_SECRET_KEY">
          <value>LxEnc8ctqtzPFyCJvbG8s1Zi6wkjcMMs9CtN84nX</value>
        </variable>
      </environmentvariables>
      <materials>
        <pipeline pipelineName="DoodleshopBAT" stageName="AutoSmallDeployAndTest" />
        <pipeline pipelineName="tools" stageName="Build" materialName="tools" />
      </materials>
      <stage name="NotifyTesters">
        <jobs>
          <job name="sendMail">
            <tasks>
              <exec command="/bin/true" />
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="UATDeploy" fetchMaterials="false">
        <approval type="manual" />
        <environmentvariables>
          <variable name="DOODLE_ENV">
            <value>uat</value>
          </variable>
        </environmentvariables>
        <jobs>
          <job name="DeployAndSmokeTests">
            <tasks>
              <fetchartifact pipeline="DoodleshopBAT" stage="Build" job="Build2DockerImage" srcdir="downstream/artifacts">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="tools" stage="Build" job="tools" srcfile="downstream/artifacts/rancher">
                <runif status="passed" />
              </fetchartifact>
              <exec command="bash">
                <arg>-x</arg>
                <arg>artifacts/scripts/rancher-deploy.sh</arg>
                <arg>test</arg>
                <arg>artifacts/rancher/doodleshop-uat</arg>
                <runif status="passed" />
              </exec>
              <exec command="bash" workingdir="artifacts/scripts">
                <arg>smoketest.sh</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>test</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="TestsOk">
        <approval type="manual" />
        <jobs>
          <job name="LoggTestReport">
            <tasks>
              <exec command="echo">
                <arg>Not implemented yet!</arg>
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="Doodleshop-Prod" labeltemplate="${Doodleshop-AutoLarge}-pr${COUNT}" isLocked="false">
      <environmentvariables>
        <variable name="RANCHER_URL">
          <value>http://54.229.16.8:8080/</value>
        </variable>
        <variable name="RANCHER_ACCESS_KEY">
          <value>A1E2C6E9FC637154D6B3</value>
        </variable>
        <variable name="RANCHER_SECRET_KEY">
          <value>LxEnc8ctqtzPFyCJvbG8s1Zi6wkjcMMs9CtN84nX</value>
        </variable>
      </environmentvariables>
      <materials>
        <pipeline pipelineName="Doodleshop-UAT" stageName="TestsOk" materialName="Doodleshop-UAT" />
        <pipeline pipelineName="Doodleshop-AutoLarge" stageName="AutoLargeDeployAndTest" materialName="Doodleshop-AutoLarge" />
      </materials>
      <stage name="CreateReportsForDecision">
        <jobs>
          <job name="createreports">
            <tasks>
              <exec command="echo">
                <arg>Not Implemented</arg>
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="ProdDeploy" fetchMaterials="false">
        <approval type="manual" />
        <environmentvariables>
          <variable name="DOODLE_ENV">
            <value>prod</value>
          </variable>
        </environmentvariables>
        <jobs>
          <job name="DeployAndSmokeTests">
            <tasks>
              <fetchartifact pipeline="DoodleshopBAT/Doodleshop-UAT" stage="Build" job="Build2DockerImage" srcdir="downstream/artifacts">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="tools/Doodleshop-UAT" stage="Build" job="tools" srcfile="downstream/artifacts/rancher">
                <runif status="passed" />
              </fetchartifact>
              <exec command="bash">
                <arg>-x</arg>
                <arg>artifacts/scripts/rancher-deploy.sh</arg>
                <arg>prod</arg>
                <arg>artifacts/rancher/doodleshop-prod</arg>
                <runif status="passed" />
              </exec>
              <exec command="bash" workingdir="artifacts/scripts">
                <arg>smoketest.sh</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>prod</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </pipelines>
  <pipelines group="Common">
    <pipeline name="tools">
      <materials>
        <git url="https://github.com/sennerholm/cdkurs-tools.git" />
      </materials>
      <stage name="Build" cleanWorkingDir="true">
        <jobs>
          <job name="tools">
            <tasks>
              <exec command="bash">
                <arg>scripts/build.sh</arg>
              </exec>
            </tasks>
            <artifacts>
              <artifact src="artifacts" dest="downstream" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </pipelines>
  <agents>
  </agents>
</cruise>
